name: Notify Discord

on:
  issues:
    types: [opened, closed]
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, closed]

jobs:
  notify:
    runs-on: ubuntu-latest
    # Provide the webhook once at job level (inherited by steps)
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

    steps:
      # 1) New Proposal (issue title starts with [Proposal])
      - name: Notify ‚Äî New Proposal
        if: >
          github.event_name == 'issues' &&
          github.event.action == 'opened' &&
          startsWith(github.event.issue.title, '[Proposal]')
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üìù **New Proposal Submitted**
            Title: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      # 2) New Report
      - name: Notify ‚Äî New Report
        if: >
          github.event_name == 'issues' &&
          github.event.action == 'opened' &&
          startsWith(github.event.issue.title, '[Report]')
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üìä **New Report Submitted**
            Title: ${{ github.event.issue.title }}
            Submitted by: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      # 3) Meeting Notes
      - name: Notify ‚Äî Meeting Notes
        if: >
          github.event_name == 'issues' &&
          github.event.action == 'opened' &&
          startsWith(github.event.issue.title, '[Meeting]')
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üìÖ **Meeting Notes Added**
            Title: ${{ github.event.issue.title }}
            Recorder: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      # 4) New Task / Bounty
      - name: Notify ‚Äî New Task/Bounty
        if: >
          github.event_name == 'issues' &&
          github.event.action == 'opened' &&
          startsWith(github.event.issue.title, '[Task]')
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üõ†Ô∏è **New Task / Bounty Created**
            Title: ${{ github.event.issue.title }}
            Created by: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      # 5) Generic new issue (fallback) ‚Äî only if not one of the above
      - name: Notify ‚Äî New Issue (fallback)
        if: >
          github.event_name == 'issues' &&
          github.event.action == 'opened' &&
          !startsWith(github.event.issue.title, '[Proposal]') &&
          !startsWith(github.event.issue.title, '[Report]') &&
          !startsWith(github.event.issue.title, '[Meeting]') &&
          !startsWith(github.event.issue.title, '[Task]')
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üì¢ **New Issue Created**
            Title: ${{ github.event.issue.title }}
            Author: ${{ github.event.issue.user.login }}
            Link: ${{ github.event.issue.html_url }}

      # 6) Issue closed
      - name: Notify ‚Äî Issue Closed
        if: >
          github.event_name == 'issues' &&
          github.event.action == 'closed'
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ‚úÖ **Issue Closed**
            Title: ${{ github.event.issue.title }}
            Closed by: ${{ github.actor }}
            Link: ${{ github.event.issue.html_url }}

      # 7) New comment on issue
      - name: Notify ‚Äî Issue Comment
        if: >
          github.event_name == 'issue_comment' &&
          github.event.action == 'created'
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üí¨ **New Comment**
            On: ${{ github.event.issue.title }}
            Comment by: ${{ github.event.comment.user.login }}
            "{{ github.event.comment.body }}"
            Link: ${{ github.event.comment.html_url }}

      # 8) New workflow doc PR (title starts with [Workflow])
      - name: Notify ‚Äî New Workflow PR
        if: >
          github.event_name == 'pull_request' &&
          github.event.action == 'opened' &&
          startsWith(github.event.pull_request.title, '[Workflow]')
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ‚öôÔ∏è **New Workflow Document Submitted**
            Title: ${{ github.event.pull_request.title }}
            Author: ${{ github.event.pull_request.user.login }}
            Link: ${{ github.event.pull_request.html_url }}

      # 9) Generic new PR
      - name: Notify ‚Äî New Pull Request
        if: >
          github.event_name == 'pull_request' &&
          github.event.action == 'opened' &&
          !startsWith(github.event.pull_request.title, '[Workflow]')
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üîÑ **New Pull Request**
            Title: ${{ github.event.pull_request.title }}
            Author: ${{ github.event.pull_request.user.login }}
            Link: ${{ github.event.pull_request.html_url }}

      # 10) PR merged
      - name: Notify ‚Äî PR Merged
        if: >
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true
        uses: Ilshidur/action-discord@master
        with:
          args: |
            üéâ **Pull Request Merged**
            Title: ${{ github.event.pull_request.title }}
            Merged by: ${{ github.actor }}
            Link: ${{ github.event.pull_request.html_url }}

      # 11) PR closed (not merged)
      - name: Notify ‚Äî PR Closed (Not Merged)
        if: >
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged != true
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ‚ùå **Pull Request Closed (Not Merged)**
            Title: ${{ github.event.pull_request.title }}
            Closed by: ${{ github.actor }}
            Link: ${{ github.event.pull_request.html_url }}
